{"version":3,"sources":["client.js","App.js","reportWebVitals.js","index.js"],"names":["client","contentful","space","process","accessToken","App","useState","products","setproducts","loading","setloading","useEffect","getEntries","content_type","then","response","console","log","items","catch","error","className","length","map","fields","description","image","name","src","file","url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEaA,G,YAASC,aAAwB,CAC5CC,MAAOC,eACPC,YAAaD,iD,OCyDAE,MAzDf,WAAgB,IAAD,EAEmBC,mBAAS,IAF5B,mBAENC,EAFM,KAEIC,EAFJ,OAGiBF,oBAAS,GAH1B,mBAGNG,EAHM,KAGGC,EAHH,KAiBb,OAXAC,qBAAU,WACRD,GAAW,GACXV,EAAOY,WAAW,CAAEC,aAAc,aAC/BC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,OACrBV,EAAYO,EAASG,OACrBR,GAAW,MAEZS,MAAMH,QAAQI,MAAMV,GAAW,MACjC,IAEAD,EAEC,0CAOF,sBAAKY,UAAU,YAAf,UACE,0CACA,qBAAKA,UAAU,MAAf,SACGd,EAASe,OAAS,EAAIf,EAASgB,KAAI,oBAAEC,OAAQC,EAAV,EAAUA,YAAYC,EAAtB,EAAsBA,MAAMC,EAA5B,EAA4BA,KAA5B,OAClC,qBAAKN,UAAU,QAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKO,IAAKF,EAAMF,OAAOK,KAAKC,QAE9B,6BAAKH,IACL,4BAAIF,YAIR,oDChCKM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9de479d7.chunk.js","sourcesContent":["import * as contentful from \"contentful\";\r\n\r\nexport const client = contentful.createClient({\r\n  space: process.env.REACT_APP_SPACE_ID,\r\n  accessToken: process.env.REACT_APP_ACCESS_TOKEN,\r\n});\r\n","import \"./App.css\";\nimport {useEffect,useState} from 'react';\nimport { client } from \"./client\";\n\nfunction App() {\n\n  const [products, setproducts] = useState([]);\n  const [loading, setloading] = useState(false);\n\n\n  useEffect(() => {\n    setloading(true);\n    client.getEntries({ content_type: \"products\" })\n      .then((response) => {\n        console.log(response.items);\n        setproducts(response.items);\n        setloading(false);\n      })\n      .catch(console.error,setloading(false));\n  }, []);\n\n  if(loading){\n    return (\n      <div>Loading</div>\n    )\n   \n  }\n\n  return (\n\n    <div className=\"container\">\n      <h1>Products</h1>\n      <div className=\"row\">\n        {products.length > 0 ? products.map(({fields:{description,image,name}})=>(\n          <div className=\"items\"> \n            <div className=\"box\">\n              <div className=\"imgsect\">\n                <img src={image.fields.file.url} />\n              </div>\n              <h3>{name}</h3>\n              <p>{description}</p>\n            </div>\n        </div>\n        )): (\n          <div>\n            No products\n          </div>\n\n        )}\n        \n      </div>\n\n\n    </div>\n\n  )\n\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}